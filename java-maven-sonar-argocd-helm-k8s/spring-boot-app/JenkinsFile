pipeline {
    agent {
        docker {
            image 'maven:3.9.4-eclipse-temurin-17'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock --entrypoint=""' // Mount Docker socket for host Docker
        }
    }

    environment {
        DOCKER_IMAGE_PREFIX = "vamsikrishna319/ultimate-cicd"
        REGISTRY_CREDENTIALS = credentials('docker-cred') // Docker Hub credentials
        GIT_USER_NAME = "vamsi-krishna319"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    }

    stages {

        stage('Checkout') {
            steps {
                echo "Checkout stage passed"
                // Uncomment below to actually checkout from GitHub
                // git branch: 'main', url: 'https://github.com/vamsi-krishna319/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Build and Test') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    def imageTag = "${DOCKER_IMAGE_PREFIX}:${BUILD_NUMBER}"
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh "docker build -t ${imageTag} ."
                    }
                    def dockerImage = docker.image(imageTag)
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "pvkreddy2003.com"
                        git config user.name "${GIT_USER_NAME}"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed!"
        }
    }
}
